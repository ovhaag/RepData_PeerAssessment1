cd Rkoans
cd Rkoans
x <- c(1:5)
x
library(swirl)
swirl
info()
main()
nxt()
x <- 45
x
main()
info()
bye()
Sys.setlocale(category = "LC_ALL", locale = "")
Sys.setlocale(category = "LC_TIME", locale = "")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
xyplot(weight ~ Time | Diet)
summary(Diet)
Diet
BodyWeight
## Loading and preprocessing the data
* set working directory
* laod data
```{r}
setwd("~/Documents/SWE/udacity_coursera_edx/datasciencecoursera/RepData_PeerAssessment1/")
activity <- read.csv("activity.csv")
```
## What is mean total number of steps taken per day?
```{r}
steps_per_day <- aggregate(activity$steps, by=list(activity$date), sum)
names(steps_per_day) <- c("date", "steps")
```
```{r fig.width=10, fig.height=6}
hist(steps_per_day$steps, xlab="Steps per Day", main="Histogram of Steps per Day")
```
```{r}
mean_steps <- mean(steps_per_day$steps, na.rm = TRUE)
median_steps <- median(steps_per_day$steps, na.rm = TRUE)
options(scipen=1, digits=1)
```
- **Mean** total number of steps taken per day: **`r mean_steps`**
- **Median** total number of steps taken per day: **`r median_steps`**
```{r}
steps_per_interval <- aggregate(activity$steps, by=list(activity$interval), mean, na.rm = TRUE)
names(steps_per_interval) <- c("interval", "steps")
```
```{r fig.width=10, fig.height=6}
plot(x=steps_per_interval$interval, y=steps_per_interval$steps, type="l",
xlab="Interval ID", ylab="Steps", main="Daily Activity")
```
```{r}
top_id <- steps_per_interval$interval[steps_per_interval$steps==max(steps_per_interval$steps)]
```
The **Top ID**, i.e. the ID of the 5-minute interval, which on average across all the days in the dataset, contains the maximum number of steps is **`r top_id`**.
missing <- sum(is.na(activity$steps))
all <- length(activity$steps)
quickfix <- activity
quickfix[is.na(quickfix)] <- 0
qfsteps_per_day <- aggregate(quickfix$steps, by=list(quickfix$date), sum)
names(qfsteps_per_day) <- c("date", "steps")
hist(qfsteps_per_day$steps, xlab="Steps per Day", main="Histogram of Steps per Day")
mean_qfsteps <- mean(qfsteps_per_day$steps)
median_qfsteps <- median(qfsteps_per_day$steps)
options(scipen=1, digits=1)
sophfix <- activity
fix_location <- which(is.na(activity$steps))
fix_steps <- activity$steps[fix_location]
fix_date <- activity$date[fix_location]
fix_interval <- activity$interval[fix_location]
fix <- function(date, interval) {
intervals_per_day <- 12 * 24
fix_spi <- steps_per_interval
fix_spi[is.na(fix_spi)] <- mean_steps / intervals_per_day
fix_spd <- steps_per_day
fix_spd[is.na(fix_spd)] <- mean_steps
proposal1 <- fix_spi$steps[which(fix_spi$interval == interval)]
proposal2 <- fix_spd$steps[which(fix_spd$date == date)] / intervals_per_day
return(sqrt(proposal1 * proposal2))
}
?logic
?operator
?and
for(date in factor(sophfix$date)) {
for(interval in factor(sophfix$interval)) {
location = which(sophfix$date == date && sophfix$interval == interval)
sophfix[location] <- fix(date, interval)
}
}
View(sophfix)
is.na(sophfix)
sfsteps_per_day <- aggregate(sophfix$steps, by=list(sophfix$date), sum)
names(sfsteps_per_day) <- c("date", "steps")
# hist(sfsteps_per_day$steps, xlab="Steps per Day", main="Histogram of Steps per Day")
hist(sfsteps_per_day$steps, xlab="Steps per Day", main="Histogram of Steps per Day")
sophfix <- activity
View(sophfix)
fix <- function(date, interval) {
intervals_per_day <- 12 * 24
fix_spi <- steps_per_interval
fix_spi[is.na(fix_spi)] <- mean_steps / intervals_per_day
fix_spd <- steps_per_day
fix_spd[is.na(fix_spd)] <- mean_steps
proposal1 <- fix_spi$steps[which(fix_spi$interval == interval)]
proposal2 <- fix_spd$steps[which(fix_spd$date == date)] / intervals_per_day
return(sqrt(proposal1 * proposal2))
}
for(date in factor(sophfix$date)) {
for(interval in factor(sophfix$interval)) {
location = which(sophfix$date == date && sophfix$interval == interval)
sophfix[location] <- fix(date, interval)
}
}
xdate = "2012-10-02"
xinterval = 5
xfix <- fix(xdate, xinterval)
xdate = "2012-10-01"
xfix <- fix(xdate, xinterval)
intervals_per_day <- 12 * 24
fix_spi <- steps_per_interval
fix_spi[is.na(fix_spi)] <- mean_steps / intervals_per_day
fix_spd <- steps_per_day
fix_spd[is.na(fix_spd)] <- mean_steps
View(fix_spi)
View(fix_spd)
xxx <- 0
for(date in factor(sophfix$date)) {
for(interval in factor(sophfix$interval)) {
#location = which(sophfix$date == date && sophfix$interval == interval)
#sophfix[location] <- fix(date, interval)
xxx <- xxx+1
}
}
xxx <- 0
for(date in factor(sophfix$date)) {
for(interval in factor(sophfix$interval)) {
#location = which(sophfix$date == date && sophfix$interval == interval)
#sophfix[location] <- fix(date, interval)
xxx <- xxx+1
}
}
fixall <- function() {
xxx <- 0
for(date in factor(sophfix$date)) {
for(interval in factor(sophfix$interval)) {
#location = which(sophfix$date == date && sophfix$interval == interval)
#sophfix[location] <- fix(date, interval)
xxx <- xxx+1
}
}
return xxx
}
ixall <- function() {
xxx <- 0
for(date in factor(sophfix$date)) {
for(interval in factor(sophfix$interval)) {
#location = which(sophfix$date == date && sophfix$interval == interval)
#sophfix[location] <- fix(date, interval)
xxx <- xxx+1
}
}
return(xxx)
}
fixall <- function() {
xxx <- 0
for(date in factor(sophfix$date)) {
for(interval in factor(sophfix$interval)) {
#location = which(sophfix$date == date && sophfix$interval == interval)
#sophfix[location] <- fix(date, interval)
xxx <- xxx+1
}
}
return(xxx)
}
fixall()
factor(sophfix$date)
sophfix <- activity
sophfix[1,]
sophfix[1,] <- fix(sophfix$date[1,], sophfix$interval[1,])
sophfix$date[1,]
sophfix[1,] <- fix(sophfix$date[1], sophfix$interval[1])
sophfix$date[1]
View(sophfix)
View(activity)
sophfix <- activity
View(sophfix)
sophfix[1,]
sophfix$date[1]
sophfix[1,] <- fix(sophfix$date[1], sophfix$interval[1])
sophfix <- activity
sophfix[1,]
sophfix$date[1]
sophfix$steps[1] <- fix(sophfix$date[1], sophfix$interval[1])
?lapply
?mapply
?length
length(sophfix$steps)
xxx <- 0
for(idx in 1:length(sophfix$steps)) {
xxx <- idx
}
xxx
for(idx in 1:length(sophfix$steps)) {
if(is.na(sophfix$steps[idx])) {
sophfix$steps[idx] <- fix(sophfix$date[idx], sophfix$interval[idx])
}
}
View(sophfix)
sfsteps_per_day <- aggregate(sophfix$steps, by=list(sophfix$date), sum)
names(sfsteps_per_day) <- c("date", "steps")
hist(sfsteps_per_day$steps, xlab="Steps per Day", main="Histogram of Steps per Day")
?weekda
?weekday
?weekdays
View(activity)
weekdays(activity$date[1:4])
weekdays(as.date(activity$date[1:4]))
?date
?as.date
?as.time
?as.dates
?as.day
weekdays(as.Date(activity$date[1:4]))
factor(weekdays(as.Date(activity$date[1:4])), levels=c(1,6), labels=c("weekday", "weekend")
)
weekdays(as.Date(activity$date[c(1:4, 500:504)]))
weekdays(as.Date(activity$date[c(1, 289, 578, 900, 1200)]))
weekdays(as.Date(activity$date[c(1, 289, 578, 900, 1200, 1500, 1800)]))
as.numeric(weekdays(as.Date(activity$date[c(1, 289, 578, 900, 1200, 1500, 1800)])))
factor(weekdays(as.Date(activity$date[c(1, 289, 578, 900, 1200, 1500, 1800)])))
factor(weekdays(as.Date(activity$date[1:4])), levels=c(1,6), labels=c("weekday", "weekend")
)
factor(weekdays(as.Date(activity$date[1:4])), levels=c(Monday:Friday,Saturday:Sunday), labels=c("weekday", "weekend"))
factor(weekdays(as.Date(activity$date[1:4])), levels=c(1:5, 6:7), labels=c("weekday", "weekend"))
factor(weekdays(as.Date(activity$date[1:4])), levels=c(1:5, 6:7), labels=c("weekday", "weekday", "weekday", "weekday", "weekday", "weekend", "weekend"))
weekdays(as.Date(activity$date[c(1, 289, 578, 900, 1200, 1500, 1800)]))
somedays <- weekdays(as.Date(activity$date[c(1, 289, 578, 900, 1200, 1500, 1800)]))
somedays %in% weekend
weekend <- c(Saturday, Sunday)
weekend <- c("Saturday", "Sunday")
somedays %in% weekend
View(steps_per_day)
View(steps_per_interval)
xxx <- activity
xxxy$day <- weekdays(as.Date(xxx$date))
xxx <- activity
xxx$day <- weekdays(as.Date(xxx$date))
View(xxx)
xxx$day <- weekdays(as.Date(xxx$date)) %in% weekend
View(xxx)
xxx$day <- factor(weekdays(as.Date(xxx$date)) %in% weekend)
View(xxx)
xxx$day <- factor(weekdays(as.Date(xxx$date)) %in% weekend, labels=c("weekday", "weekend"))
View(xxx)
View(xxx[4000:4002])
View(xxx[4000:4002,])
weekend <- c("Saturday", "Sunday")
activity$day <- factor(weekdays(as.Date(activity$date)) %in% weekend, labels=c("weekday", "weekend"))
attach(activity)
plot(interval, steps)
plot(activity$interval, activity$steps)
plot(activity$interval, activity$steps, type=l)
plot(activity$interval, activity$steps, type="l")
steps_per_interval <- aggregate(activity$steps, by=list(activity$interval), mean)
plot(activity$interval, activity$steps, type="l")
steps_per_interval <- aggregate(activity$steps, by=list(activity$interval), mean)
names(steps_per_interval) <- c("interval", "steps")
plot(activity$interval, activity$steps, type="l")
plot(steps_per_interval$interval, steps_per_interval$steps, type="l")
View(steps_per_interval)
View(activity)
sophfix$day <- factor(weekdays(as.Date(sophfix$date)) %in% weekend, labels=c("weekday", "weekend"))
View(sophfix)
steps_per_interval <- aggregate(sophfix$steps, by=list(sophfix$interval), mean)
names(steps_per_interval) <- c("interval", "steps")
plot(steps_per_interval$interval, steps_per_interval$steps, type="l")
View(steps_per_interval)
steps_per_interval <- aggregate(sophfix$steps, by=list(sophfix$interval, sophfix$day), mean)
View(steps_per_interval)
names(steps_per_interval) <- c("interval", "day", "steps")
View(steps_per_interval)
plot(steps_per_interval$interval, steps_per_interval$steps, type="l")
attach(mtcars)
xyplot(mpg~wt|cyl.f*gear.f,
main="Scatterplots by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight")
library(lattice)
attach(mtcars)
xyplot(mpg~wt|cyl.f*gear.f,
main="Scatterplots by Cylinders and Gears",
ylab="Miles per Gallon", xlab="Car Weight")
attach(steps_per_interval)
library(lattice)
attach(steps_per_interval)
xyplot(steps~interval|day,
main="Scatterplots ..",
ylab="Miles per Gallon", xlab="Car Weight")
xyplot(steps~interval|day,
type="l"
main="Steps per Interval",
ylab="Steps", xlab="Interval")
xyplot(steps~interval|day, steps_per_interval,
main="Steps per Interval",
ylab="Steps", xlab="Interval")
xyplot(steps~interval|day, steps_per_interval,
main="Steps per Interval",
ylab="Steps", xlab="Interval"
layout=c(2,1))
xyplot(steps~interval|day, steps_per_interval,
main="Steps per Interval",
ylab="Steps", xlab="Interval",
layout=c(1,2))
```{r fig.width=10, fig.height=8}
xyplot(steps~interval|day, steps_per_interval,
type = "l"
main="Steps per Interval",
ylab="Steps", xlab="Interval",
layout=c(1,2))
xyplot(steps~interval|day, steps_per_interval,
type = "l",
main="Steps per Interval",
ylab="Steps", xlab="Interval",
layout=c(1,2))
mean_ad <- mean(sfsteps_per_day$steps)
median_ad <- median(sfsteps_per_day$steps)
mean_wd <- mean(sfsteps_per_day$steps[day == "weekday"])
median_wd <- median(sfsteps_per_day$steps[day == "weekday"])
mean_we <- mean(sfsteps_per_day$steps[day == "weekend"])
median_we <- median(sfsteps_per_day$steps[day == "weekend"])
steps_per_interval <- aggregate(sophfix$steps, by=list(sophfix$interval, sophfix$day), mean)
names(steps_per_interval) <- c("interval", "day", "steps")
mean_ad <- mean(sfsteps_per_interval$steps)
mean_ad <- mean(steps_per_interval$steps)
median_ad <- median(steps_per_interval$steps)
mean_wd <- mean(steps_per_interval$steps[day == "weekday"])
median_wd <- median(steps_per_interval$steps[day == "weekday"])
mean_we <- mean(steps_per_interval$steps[day == "weekend"])
median_we <- median(steps_per_interval$steps[day == "weekend"])
mean_wd <- mean(steps_per_interval$steps[day == "weekday"])
mean_ad <- mean(steps_per_interval$steps)
mean_wd <- mean(steps_per_interval$steps[day == "weekday"])
mean_we <- mean(steps_per_interval$steps[day == "weekend"])
mean_ad <- mean(steps_per_interval$steps)
mean_wd <- mean(steps_per_interval$steps[day == "weekday"])
median_we <- median(steps_per_interval$steps[steps_per_interval$day == "weekend"])
